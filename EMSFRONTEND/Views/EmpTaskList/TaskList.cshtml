


@model IEnumerable<TaskModel>

@{
    ViewData["Title"] = "Task List";
}

<h2 class="text-center my-4">Assigned Tasks</h2>
<div class="ml-4">
    <table class="table table-striped table-bordered table-hover shadow-sm rounded">
        <thead class="thead-light">
            <tr>

                <th>Task Title</th>
                <th>Description</th>
                <th>Assigned Date</th>
                <th>Deadline Date</th>
                <th>Resources</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var task in Model)
            {
                <tr>

                    <td>@task.Title</td>
                    <td>@task.Description</td>
                    <td>@task.AssignedDate.ToString("MMMM dd, yyyy")</td>
                    <td>@task.DeadlineDate.ToString("MMMM dd, yyyy")</td>

                    <td>
                        @if (!string.IsNullOrEmpty(task.Resources))
                        {
                            var resourcePath = task.Resources;
                            // Ensure the link starts with http:// or https://
                            if (!resourcePath.StartsWith("http://") && !resourcePath.StartsWith("https://"))
                            {
                                resourcePath = "https://" + resourcePath; // Prepend https:// to ensure proper linking
                            }
                            <a href="@resourcePath" target="_blank" class="text-primary">View Resource</a>
                        }
                    </td>

                    <td>
                        @{
                            string statusColor = task.TaskStatus switch
                            {
                                "Pending" => "text-primary bg-light", // Blue for Pending
                                "Submitted" => "text-success bg-light", // Green for Submitted
                                "Overdue" => "text-danger bg-light", // Red for Overdue
                                _ => ""
                            };
                        }
                        <span class="@statusColor"
                              style="border-radius: 10px; padding: 5px 10px; font-weight: bold;">
                            @task.TaskStatus
                        </span>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="mt-3">
        <a href="@Url.Action("EmployeeView", "Dashboard")" class="btn btn-outline-primary">Back to Dashboard</a>
    </div>
</div>


<!-- Custom CSS for table styling -->
<style>
    table {
        width: 100%; 
        border-collapse: collapse; 
        margin-top: 20px; 
    }

    th, td {
        padding: 15px; 
        text-align: center; 
        vertical-align: middle; 
        border-radius: 5px; 
    }

    th {
        background-color: #f8f9fa; 
        color: #333; 
        font-weight: bold; 
    }

    td {
        background-color: #ffffff; 
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1); 
    }

    tbody tr:hover {
        background-color: #f1f1f1; 

    tbody tr:nth-child(even) {
        background-color: #f9f9f9; 
    }

    /* Styling for the back button */
    .btn {
        padding: 10px 20px; 
        font-size: 16px; 
        border-radius: 5px; 
        cursor: pointer; 
    }

    .btn-secondary {
        background-color: #6c757d; 
        color: white; 
        border: none; 
    }

    .btn-secondary:hover {
        background-color: #5a6268; 
    }
</style>